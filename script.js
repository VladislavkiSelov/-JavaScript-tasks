//--------------------------------------------------------------------- ЦЫКЛЫ----------------------------------------------------------------------------------------

// 1) Выведите столбец чисел от 1 до 100.

// for (let i=1;i<=100;i++){
//     console.log(i)
// }

// 2) Выведите столбец чисел от 11 до 33.

// for (let i=11;i<=33;i++){
//     console.log(i)
// }

// 3)  Выведите столбец четных чисел в промежутке от 0 до 100.
// for (let i = 0; i <= 100; i += 2) {
//     console.log(i)
// }

// 4) С помощью цикла найдите сумму чисел от 1 до 100.
// let y = 0;
// for(let i = 0; i <= 100; i++){
//     y+=i
// }
// console.log(y)

// 5) Дан массив с элементами [1, 2, 3, 4, 5]. С помощью цикла for выведите все эти элементы на экран.

// let yyy = [1, 2, 3, 4, 5];
// for (i = 0;i<yyy.length;i++){
//     console.log(yyy[i])
// }

// 6) Дан массив с элементами [1, 2, 3, 4, 5]. С помощью цикла for найдите сумму элементов этого массива. Запишите ее в переменную result.
// let yyy = [1, 2, 3, 4, 5];
// let result = 0;
// for (i = 0; i < yyy.length; i++) {
//     result += yyy[i]
// }
// console.log(result)

// 7)  Дан объект obj. С помощью цикла for-in выведите на экран ключи и элементы этого объекта.
// let obj = {green: 'зеленый', red: 'красный', blue: 'голубой'}
// for(let key in obj){ console.log(`${key} => ${obj[key]}`)}

// 8) Дан объект obj с ключами Коля, Вася, Петя с элементами '200', '300', '400'. С помощью цикла for-in выведите на экран строки такого формата: 'Коля - зарплата 200 долларов.'.
// let a = {Коля: '200', Вася: '300', Петя: '200'};
// for(let i in a){console.log(`${i} зарплата ${a[i]} долларов`)}

// 9) Дан массив с элементами 2, 5, 9, 15, 0, 4. С помощью цикла for и оператора if выведите на экран столбец тех элементов массива, которые больше 3-х, но меньше 10.
// let masf =[2, 5, 9, 15, 0, 4]
// for(i=0;i<masf.length;i++){
//     if (masf[i]>=3 && masf[i]<=10 ){
//         console.log(masf[i])
//     }
// }


// 10) Дан массив с числами.Числа могут быть положительными и отрицательными.Найдите сумму положительных элементов массива.
// let masf = [2, 5, -9, 15, 6, -4]
// let res = 0;
// for (i = 0; i < masf.length; i++) {
//     if (masf[i] > 0) {
//         res+=masf[i]}
// }

// console.log(res)

// 11) Дан массив с элементами 1, 2, 5, 9, 4, 13, 4, 10. С помощью цикла for и оператора if проверьте есть ли в массиве элемент со значением, равным
// 4. Если есть - выведите на экран 'Есть!' и выйдите из цикла. Если нет - ничего делать не надо.
// let masf = [ 1, 2, 5, 9, 4, 13, 4, 10]
// for(i = 0; i < masf.length; i++){
// if (masf[i]===4){
//     console.log('Есть!');
//     break;
// }
// }


// 12) Дан массив числами, например: [10, 20, 30, 50, 235, 3000]. Выведите на экран только те числа из массива, которые начинаются на цифру 1, 2 или 5.
// let masf = [10, 20, 30, 50, 235, 3000];
// for(i = 0; i < masf.length; i++){
//     let o = String(masf[i])
//     let g = o[0]
//     if(g == 1 || g == 2 || g == 5){
//         console.log(o)
//     }
// }

// 13)  Дан массив с элементами 1, 2, 3, 4, 5, 6, 7, 8, 9. С помощью цикла for создайте строку '-1-2-3-4-5-6-7-8-9-
// let masf= [1, 2, 3, 4, 5, 6, 7, 8, 9.]
// let r = '-';
// for(i = 0; i < masf.length; i++){
//    r+=masf[i]+'-'
// }
// console.log(r)


//--------------------------------------------------------------------- МАССИВЫ----------------------------------------------------------------------------------------
// 1) Создайте массив arr = ['a', 'b', 'c']. Выведите его на экран с помощью функции alert.
// arr = ['a', 'b', 'c']
// alert(arr)

// 2)  С помощью массива arr из предыдущего номера выведите на экран содержимое первого, второго и третьего элементов.
// arr = ['a', 'b', 'c']
// alert(arr[0])
// alert(arr[1])
// alert(arr[2])

// 3) Создайте массив arr = ['a', 'b', 'c', 'd'] и с его помощью выведите на экран строку 'a+b, c+d'.
// arr = ['a', 'b', 'c', 'd'];
// alert(`${arr[0]}+${arr[1]}`)
// alert(`${arr[2]}+${arr[3]}`)

// 4) Создайте массив arr с элементами 2, 5, 3, 9. Умножьте первый элемент массива на второй, а третий элемент на четвертый. Результаты сложите, присвойте переменной result. Выведите на экран значение этой переменной.

// arr = [2, 5, 3, 9]
// let result = arr[0]*arr[1]+arr[2]*arr[3]
// alert(result)

// // 5)  Создайте объект obj. Выведите на экран элемент с ключом 'c' двумя способами: через квадратные скобки и как свойство объекта:
// let obj = {a: 1, b: 2, c: 3};
// alert(obj.c)
// alert(obj['c'])

// // 6) Создайте массив заработных плат obj. Выведите на экран зарплату Пети и Коли.
// let obj = {Коля: '1000', Вася: '500', Петя: '200'};
// alert(`Коля зарабатывает ${obj.Коля}`)
// alert(`Петя зарабатывает ${obj.Петя}`)

// // 7) Создайте объект с днями недели. Ключами в нем должны служить номера дней от начала недели (понедельник - первый и т.д.). Выведите на экран текущий день недели.
// obj = {
//     первый: 'пн',
//     второй: 'вт',
//     третий: 'ср',
//     четвертый: 'чт',
//     пятый: 'пт',
//     шестой: 'сб',
//     седьмой: 'вс'
// }

// alert(obj.второй)

// 8) Пусть теперь номер дня недели хранится в переменной day, например там лежит число 3. Выведите день недели, соответствующий значению переменной day.

// obj = {
//     первый: 'пн',
//     второй: 'вт',
//     третий: 'ср',
//     четвертый: 'чт',
//     пятый: 'пт',
//     шестой: 'сб',
//     седьмой: 'вс'
// }

// let day = obj.второй

// alert(day)


// // 9) Дан массив [ [1, 2, 3], [4, 5, 6], [7,8,9] ]. Выведите на экран цифру 4 из этого массива.
// let a = [ [1, 2, 3], [4, 5, 6], [7,8,9] ]
// alert(a[1][0])

// // 10) Дан объект {js:['jQuery', 'Angular'], php: 'hello', css: 'world'}. Выведите с его помощью слово 'jQuery'.
// let obj = {js:['jQuery', 'Angular'],
//  php: 'hello',
//   css: 'world'}

//   alert(obj.js[0])

// // 11) Создайте двухмерный массив. Первые два ключа - это 'ru' и 'en'. Пусть первый ключ содержит элемент, являющийся массивом названий дней недели по-русски, а второй - по-английски.
// // Выведите с помощью этого массива понедельник по-русски и среду по английски (пусть понедельник - это нулевой день).
// let obj = {ru:['пн', 'вт','ср','чт','пт','сб','вс'],
// en:['m', 't','w','t','f','st','sn']
// }
// alert(`${obj.ru[0]} ${obj.en[0]}`)

// // 12) Пусть теперь в переменной lang хранится язык (она принимает одно из значений или 'ru', или 'en' - либо то, либо то), а в переменной day - номер дня. Выведите словом день недели, соответствующий переменным lang и day.
// // То есть: если, к примеру, lang = 'ru' и day = 3 - то выведем 'среда'.
// let obj = {ru:['пн', 'вт','ср','чт','пт','сб','вс'],
// en:['m', 't','w','t','f','st','sn']
// }
// let lang = obj.ru;
// let day = 2;
// let res = lang[day]
// alert(res)



//--------------------------------------------------------------------- Задачи на математические функции JavaScript-------------------------------------------------------------------------------------------------------
// // 2) Даны переменные a и b. Проверьте, что a делится без остатка на b. Если это так - выведите 'Делится' и результат деления, иначе выведите 'Делится с остатком' и остаток от деления.
// let  a = 10;
// let b = 5;
// let result = a % b;
// if (result !=0){ console.log('Делится с остатком '+result)
// }else{console.log('Делится '+a/b)}

// // 3)  Возведите 2 в 10 степень. Результат запишите в переменную st.
// let res= 2**10
// alert(res)

// // 4)  Найдите квадратный корень из 245.
// let a = Math.sqrt(245);
// alert(a)

// // 5)  Дан массив с элементами 4, 2, 5, 19, 13, 0, 10. Найдите квадратный корень из суммы кубов его элементов. Для решения воспользуйтесь циклом for
// let sss = [4, 2, 5, 19, 13, 0, 10]
// let result = 0;
// for(let i = 0;i<sss.length;i++){
// result +=Math.pow(sss[i], 3)
// }
// console.log(Math.sqrt(result))

// // 6) Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых.
// let a = Math.round(Math.sqrt(379));
// let b = Math.sqrt(379);
// let c = Math.sqrt(379);

// console.log(a)
// console.log(b.toPrecision(3))
// console.log(c.toPrecision(4))

// 7)  Найдите квадратный корень из 587. Округлите результат в большую и меньшую стороны, запишите результаты округления в объект с ключами 'floor' и 'ceil'.
// let floor = Math.floor(Math.sqrt(587))
// let ceil = Math.ceil(Math.sqrt(587))
// console.log(floor)
// console.log(ceil)

// 8) Даны числа 4, -2, 5, 19, -130, 0, 10. Найдите минимальное и максимальное число
// let a = [4, -2, 5, 19, -130, 0, 10]
// console.log(
//     Math.max.apply(null, a)
// )
// console.log(
//     Math.max(4, -2, 5, 19, -130, 0, 10)
// )


// //  9) Выведите на экран случайное целое число от 1 до 100.
// let a = Math.round(Math.random()*100)
// console.log(a)


// // 10) Заполните массив 10-ю случайными целыми числами.
// let arr = [];
// for(i = 0;i<11; i++){
// arr[i]=Math.round(Math.random()*10)
// }
// console.log(arr)


// // 12)  Даны переменные a и b. Отнимите от a переменную b и результат присвойте переменной c.
// // Сделайте так, чтобы в любом случае в переменную c записалось положительное значение. Проверьте работу скрипта при a и b, равных соответственно 3 и 5, 6 и 1.
//  let a = 6;
//  let b = 1;
//  let c = a - b;
//  console.log(Math.abs(c))

// 13) Дан массив arr. Найдите среднее арифметическое его элементов. Проверьте задачу на массиве с элементами 12, 15, 20, 25, 59, 79.

// let arr = [12, 15, 20, 25, 59, 79]
// let result = 0;
// for(let i = 0;i<arr.length;i++){
// result +=arr[i]
// }
// console.log(result/arr.length)
//--------------------------------------------------------------------- Задачи на функции работы со строками в JavaScript-------------------------------------------------------------------------------------------------------
// 1) Задача. Дана строка 'aaa@bbb@ccc'. Замените все @ на '!' с помощью глобального поиска и замены.

// Решение: в данном случае необходимо воспользоваться методом replace, который выполняет поиск и замену. Однако, при простом варианте использования, эта метод найдет и заменит только первое совпадение:

// var str = 'aaa@bbb@ccc';
// alert(str.replace('@', '!')); //получим 'aaa!bbb@ccc'
// Чтобы заменить все совпадения, воспользуемся глобальным поиском с помощью регулярного выражения:

// var str = 'aaa@bbb@ccc';
// alert(str.replace(/@/g, '!')); //получим 'aaa!bbb!ccc'

// // 1)  Дана строка 'js'. Сделайте из нее строку 'JS'.
// let j = 'js';
// console.log(j.replace('js', 'JS'))

// 2)  Дана строка 'JS'. Сделайте из нее строку 'js'.
// let j = 'JS';
// console.log(j.replace('JS', 'js'))

// // 3)  Дана строка 'я учу javascript!'. Найдите количество символов в этой строке.
// let a = 'я учу javascript!';
// alert(a.length)

// 4) Дана строка 'я учу javascript!'. Вырежите из нее слово 'учу' и слово 'javascript' тремя разными способами (через substr, substring, slice).
// let a = 'я учу javascript!';
// console.log(a.substr(0,1))
// console.log(a.substring(0,1))
// console.log(a.slice(0,1))

// // 5)  Дана строка 'я учу javascript!'. Найдите позицию подстроки 'учу'.
// let a = 'я учу javascript!';
// console.log(a.indexOf('учу'))

// // 6)  Дана переменная str, в которой хранится какой-либо текст. Реализуйте обрезание длинного текста по следующему принципу: если количество символов этого текста больше заданного в переменной n, то в переменную result запишем первые n символов строки str и добавим в конец троеточие '...'.
// // В противном случае в переменную result запишем содержимое переменной str.
// let a = 'в которой хранится какой-либо текст'
// let n = 19;
// let result = ''
// if(a.length>n){console.log(a.slice(0, n)+'....')
// }else{
//     console.log(a)
// }

// // 8)  Дана строка 'я учу javascript!'. С помощью метода split запишите каждое слово этой строки в отдельный элемент массива.
// let y = 'я учу javascript!'
// console.log(y.split(' '))

// // 9)  Дана строка 'я учу javascript!'. С помощью метода split запишите каждый символ этой строки в отдельный элемент массива.
// let y = 'я учу javascript!'
// console.log(y.split(''))

// 10)  В переменной date лежит дата в формате '2025-12-31'. Преобразуйте эту дату в формат '31.12.2025'.
// let d = '2025-12-31';
// let f = d.split('-')
// console.log(f[2]+'.'+f[1]+'.'+f[0])

// // 11)  Дан массив ['я', 'учу', 'javascript', '!']. С помощью метода join преобразуйте массив в строку 'я+учу+javascript+!'.
// let y = ['я', 'учу', 'javascript', '!']
// console.log( y.join( [ '+' ] ))

// // 12) Преобразуйте первую букву строки в верхний регистр.
// let g = 'java'
// console.log(g.replace('j', 'J'))

// let str = 'hello world';
//     let str2 = str.slice(0, 1).toUpperCase() + str.slice(1);
//     console.log(str2)

// 13)  Преобразуйте первую букву каждого слова строки в верхний регистр.


// ------------------------------------------------------------------------------------Задачи на функции работы с массивами в JavaScript----------------------------------------------------------------------------------

// 1) Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// let a = [1, 2, 3]
// let b = [4, 5, 6]
// let y = a.concat( b)
// console.log(y)

// // 2)  Дан массив [1, 2, 3]. Сделайте из него массив [3, 2, 1]
// let a = [1, 2, 3]
// console.log( a.reverse)

// // 3)  Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// let a = [1, 2, 3]
// a.push(4, 5, 6)
// console.log(a)

// // 4) Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.

// let a = [1, 2, 3]
// a.unshift(4, 5, 6)
// console.log(a)

// 5)  Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let a  = ['js', 'css', 'jq']
// let y = a.shift()
// console.log(y)

// 6)  Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.

// let a = ['js', 'css', 'jq']
// let r = a.pop()
// console.log(r)

// 7)  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1, 2, 3].

// let a = [1, 2, 3, 4, 5]
// let u = a.slice(0, 3)
// console.log(u)

// // 8) Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4, 5].
// let r = [1, 2, 3, 4, 5]
// let i = r.slice(3, 5)
// console.log(i)

// // 9) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].
// let a = [1, 2, 3, 4, 5];
// let o = a.splice(1, 2)
// console.log(a)

// // 10) Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив элементы [2, 3, 4].
// let a = [1, 2, 3, 4, 5];
// let o = a.splice(0, 1,)+a.splice(3, 1,)
// console.log(a)

// // 11)  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let a = [1, 2, 3, 4, 5];
// let o = a.splice(2, 0, 'a', 'b', 'c')
// console.log(a)

// 12)  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let a = [1, 2, 3, 4, 5];
// let o = a.splice(1, 0, 'a', 'b')+a.splice(5, 0, 'c')+a.splice(7, 0, 'e')
// console.log(a)

// // 13)  Дан массив [3, 4, 1, 2, 7]. Отсортируйте его.

// let k = [3, 4, 1, 2, 7]
// console.log(k.sort())

// Дана строка. Сделайте заглавным первый символ этой строки не используя цикл. Найдите два решения.

// let str = 'hello';
// str = str[0].toUpperCase()+str.slice(1,5)
// alert(str);

// var str = 'hello';
// str = str.split('');
// str[0] = str[0].toUpperCase();
// var result = str.join('');
// alert(result);


// Дана строка, например, '123456'. Переверните эту строку (сделайте из нее '654321') не используя цикл.
// let o ='123456';
// let p = o.split('')
// p.reverse
// let i = p.join('')
// console.log(i)


// Проверьте, что строка начинается на http://.
// let p = 'http://ppppppppppppp'
// if ( p.slice(0,7)=='http://'){
//    console.log('Yes')
// }else{
//     console.log('No')
// }


// // Проверьте, что строка заканчивается на .html



// let p = 'pppppp.html'
// if ( p.slice(6,11)=='.html'){
//    console.log('Yes')
// }else{
//     console.log('No')
// }


// Сделайте функцию, которая возвращает квадрат числа. Число передается параметром.

// let i = 3;
// function iii (){
//     return i **= 2
// }
// let p = iii(i)
// console.log(p)


// Сделайте функцию, которая возвращает сумму двух чисел.

// let a = 3;
// let b = 4;
// function kkk (){
//   return  b+=a
// }
// let result =  kkk (a, b)
// console.log(result)

// Сделайте функцию, которая отнимает от первого числа второе и делит на третье.
// let a = 3;
// let b = 4;
// let c = 2


// function kkk (){
//     let u = (b+a)/c
//       return u
//     }

// let result =  kkk (a, b, c)
// console.log(result)


// //  Сделайте функцию, которая принимает параметром число от 1 до 7, а возвращает день недели на русском языке.


// let a = prompt();
// function kkk (){
// if(a == 1){console.log('пн')
// } if(a == 2){console.log('вт')
// }if(a == 3){console.log('ср')
// }if(a == 4){console.log('чт')
// }if(a == 5){console.log('пт')
// }if(a == 6){console.log('сб')
// }if(a == 7){console.log('вс')
// }
// }
// kkk (a)

// Дан массив с числами. Проверьте, что в этом массиве есть число 5. Если есть - выведите 'да', а если нет - выведите 'нет'.
// let num = [1, 2, 3, 4, 5]
// for( let i in num){if(num[i] === 5){console.log('Yes')}}

// Дано число, например 31. Проверьте, что это число не делится ни на одно другое число кроме себя самого и единицы.
// То есть в нашем случае нужно проверить, что число 31 не делится на все числа от 2 до 30. Если число не делится - выведите 'false', а если делится - выведите 'true'.
// let a = 31;
// for(let i = 2;i < a;i++){
//     if( a % i){ console.log(false)
//     }else{console.log(true)}
// }


// Дан массив с числами. Проверьте, есть ли в нем два одинаковых числа подряд. Если есть - выведите 'да', а если нет - выведите 'нет'.
// function check(a) {
//     for (var q=1; q<a.length; ++q) {
//       if (a[q] === a[q-1]) {
//         return true;
//       }
//     }

//     return false;
//   }

//   console.log(check([3, 1, 1, 12]) ? "Да" : "Нет");



// Сделайте функцию, которая параметрами принимает 2 числа. Если эти числа равны - пусть функция вернет true, а если не равны - false.
// let a = 1
// let b = 1
// function kkk(a, b){
//     if(a == b){
//         console.log(true)
//     }else{
//         console.log(false)
//     }
// }

// kkk ()

// Сделайте функцию, которая параметрами принимает 2 числа. Если их сумма больше 10 - пусть функция вернет true, а если нет - false.
// let a = 6
// let b = 10
// function kkk (){
// if(a + b > 10){
//     console.log(true)
// }else{
//     console.log(false)
// }
// }
// kkk (a, b)


// Сделайте функцию, которая параметром принимает число и проверяет - отрицательное оно или нет. Если отрицательное - пусть функция вернет true, а если нет - false.

// let a = -3;

// function kkk(){
// if(a < 0){
//     console.log(true)
// }else{
//     console.log(false)
// }
// }
// kkk(a)

// С помощью цикла for сформируйте строку '123456789' и запишите ее в переменную str.
// let str = '';
// for(let i = 1;i < 10; i++){
// str+=i
// }
// console.log(str)

// С помощью цикла for сформируйте строку '987654321' и запишите ее в переменную str.
// let str = '';
// for(let i = 9;i > 0; i--){
// str+=i
// }
// console.log(str)

// С помощью цикла for сформируйте строку '-1-2-3-4-5-6-7-8-9-' и запишите ее в переменную str.
// let str = '';
// for(let i = 1;i < 10; i++){
// str+=i+'-'
// }
// console.log('-'+str)

// Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 20 рядов, а не 5:
// x
// xx
// xxx
// xxxx
// xxxxx

// let a = 'x';
// for( let x = 0; x < 19; x++){
//     console.log()
// }


// var str = ""
// // console.log(str)
// for(var x = 0; x < 20; x++){
// console.log(str += "x")
// }


// С помощью двух вложенных циклов нарисуйте следующую пирамидку:

// 1
// 22
// 333
// 4444
// 55555
// 666666
// 7777777
// 88888888
// 999999999

// let a ='';
// for ( let i =0;i<=5;i++){
// for(let k = 0; k < i; ++k){
//  console.log(i)
// }
// }

// Нарисуйте пирамиду, как показано на рисунке, воспользовавшись циклом for:

// xx
// xxxx
// xxxxxx
// xxxxxxxx
// xxxxxxxxxx

// let a ='';
// for ( let i =0;i<=5;++i){
// for(let k = 0; k < i; ++k){
//  console.log(a)
// }
// }


// Заполните массив следующим образом: в первый элемент запишите 'x', во второй 'xx', в третий 'xxx' и так далее.

// let masf = [];
// let x = '';
// for(let i = 0; i<5; i++){
//     masf.push(x)
//     x+='x'
// }
// console.log(masf)


// Заполните массив следующим образом: в первый элемент запишите '1', во второй '22', в третий '333' и так далее.

// let masf = [];
// for(let i = 1; i<=5; i++){
//     let str = ''
//     for(let j = 0;j < i;j++){
//         str+=i
//     }
//     masf.push(str)
// }
// console.log(masf)


// Сделайте функцию arrayFill, которая будет заполнять массив заданными значениями. Первым параметром функция принимает значение, которым заполнять массив,
//  а вторым - сколько элементов должно быть в массиве. Пример: arrayFill('x', 5) сделает массив ['x', 'x', 'x', 'x', 'x'].

// let masf = []
// let a = 'x'
// let b = 5
// function arrayFill(){
// for(let i =0; i <= b; i++){
//     masf.push(a)
// }
// }

// arrayFill(a, b)
// console.log(masf)

// Дан массив с числами. Узнайте сколько элементов с начала массива надо сложить, чтобы в сумме получилось больше 10-ти.

// let masf = [1, 2, 3, 4, 5, 6, 7, 8, 9]
// function func(){
// let a = 0;
// for(let i = 0; i<masf.length;i++){
//     a+=masf[i]
//     if(a>10){
//        return i+1
//     }
// }
// }
// console.log(func(masf))



// -------------------------------------------------------------Правильное использование пользовательских функций------------------------------------------------------------------------------

// 1)  Сделайте функцию isNumberInRange, которая параметром принимает число и проверяет, что оно больше нуля и меньше 10. Если это так - пусть функция возвращает true, если не так - false.
// let a = 5
// function isNumberInRange(){
//     if (a>0 && a<10){
//         return console.log(true)
//     }else{
//         return console.log(false)
//     }
// }
// isNumberInRange(a)

// 2) Дан массив с числами. Запишите в новый массив только те числа, которые больше нуля и меньше 10-ти. Для этого используйте вспомогательную функцию isNumberInRange из предыдущей задачи.

// let masf = [1, 2, 2, -3, 9, 6, 53, 8]

// function isNumberInRange(a){
//     if (a>0 && a<10){
//         return true
//     }else{
//         return false
//     }
// }

// let sss =[];
// for(i=0;i<=masf.length;i++){
//     if(isNumberInRange(masf[i])){
//         sss.push(masf[i])
//     }
// }

// console.log(sss)


// 3) Сделайте функцию getDigitsSum (digit - это цифра), которая параметром принимает целое число и возвращает сумму его цифр.
// let a = 4466;
// function getDigitsSum(num){
// let d = '';
// let s = num + d;
// let l = s.split('')
// let p = 0;
// for(let i in l ){
//     p+=l[i]*1
// }
// return p
// }

// console.log(getDigitsSum(a))

// 4) Найдите все года от 1 до 2023, сумма цифр которых равна 13. Для этого используйте вспомогательную функцию getDigitsSum из предыдущей задачи.
// function getDigitsSum(num){
// let d = '';
// let s = num + d;
// let l = s.split('')
// let p = 0;
// for(let i in l ){
//     p+=l[i]*1
// }
// return p
// }

// for (i=0;i<=2023;i++){
// if(getDigitsSum(i) === 13){
//     console.log(i)
// }
// }

// 5)  Сделайте функцию isEven() (even - это четный), которая параметром принимает целое число и проверяет: четное оно или нет. Если четное - пусть функция возвращает true, если нечетное - false.
// function isEven(even){
// if(even % 2 == 0){
//    return console.log(true)
// }else{return console.log(false)}
// }
// isEven(10)

// 6)  Дан массив с целыми числами. Создайте из него новый массив, где останутся лежать только четные из этих чисел. Для этого используйте вспомогательную функцию isEven из предыдущей задачи.
// let a = [2, 3, 5 ,6 ,75, 56, 50]
// let s = []
// function isEven(even){
// if(even % 2 == 0){
//    return true
// }else{return false}
// }
// for(let i in a){
//     if(isEven(a[i])){
// s.push(a[i])
//     }
// }
// console.log(s)


// ----------------------------------------------------------------------------------Практика на работу с пользовательскими функциями--------------------------------------------------------------------------------------------------
//1) Дана строка. Сделайте заглавным первый символ каждого слова этой строки.
//  Для этого сделайте вспомогательную функцию ucfirst, которая будет получать строку, делать первый символ этой строки заглавным и возвращать обратно строку с заглавной первой буквой.
// let str = 'hello world'
// function ucfirst(r){
//     let a = r[0].toUpperCase()+r.slice(1)
//     return a
// }
// console.log(ucfirst(str))


// 2) Дана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'.

// function ucfirst(r){
//     let j = r[0].toUpperCase()+r.slice(1)
//     return j
// }


// let str = 'var_text_hello'
// let masf = []
// let a = str.split('_')
// masf.push(a[0])

// for (let i = 1; i<a.length; i++){
//     let t = ucfirst(a[i])
//     masf.push(t)
// }
// let o = masf.join('')
// console.log(o)

// 3) Сделайте функцию inArray, которая определяет, есть в массиве элемент с заданным текстом или нет.
//  Функция первым параметром должна принимать текст элемента, а вторым - массив, в котором делается поиск. Функция должна возвращать true или false.


// let masf =  ['hello', 'user']
// function inArray(t, m){
// for (let i = 0; i < m.length; i++){
//     if ( m[i] == t){
//         return true
//     }
// }
// return false
// }

// console.log(
//     inArray('user', masf))

// 4) Дана строка, например, '123456'. Сделайте из нее '214365'.
// let numStr = '123456'
// function kkk (ns){
//     let a = ns.split('')
//     let masf = [];
//     for(let i = 0; i<a.length; i += 2){
//     let u = a.slice(i, i + 2).reverse();
//     masf = masf.concat(u);
//     }

//     let w = masf.join('');
//     return w;
// }

// console.log( kkk (numStr))

// Дан массив с числами. Выведите последовательно его элементы используя рекурсию и не используя цикл.
// let a = [1, 2, 3, 4, 5]
// function f1(a){
//     return function (){
//      let s = a.pop()
//      return s
//     }
// }
// const l = f1(a)
// console.log(
//    l()
// )
// console.log(
//     l()
//  )
//  console.log(
//     a
//  )



// Дано число. Сложите его цифры. Если сумма получилась более 9-ти, опять сложите его цифры. И так, пока сумма не станет однозначным числом (9 и менее).
// let num = 4565;
// function f1(num) {
//     let sum = 0;
//     let k = String(num).split('')
//     for (let i = 0; i < arr.length; i++) {
//         sum += parseInt(k[i])
//     }
//     if (sum > 9) {
//         return f1(sum)
//     } else {
//         return sum
//     }
// }

// let final = f1(num)
// console.log('Конечное число = ' + final)


// function isSumLess(num) {
//     var sum = 0;
//     var arr = String(num).split('');
//     for (var i = 0; i < arr.length; i++) {
//         sum += parseInt(arr[i]);
//     }

//     if (sum > 9) {
//         return isSumLess(sum);
//     } else {
//         return sum;
//     }
// }


// var num = 1591;
// let final_num = isSumLess(num);



// let t = 0 ;
// function f1 (){
// t++
// console.log(t)
// if ( t === 100) return;
//     f1()
// }

// f1()

// let  a = 0;
// let b = '';
// function f1(){
//     a++
//     b+=a + ' '
//     if(a<30){
//         f1()
//     }else return
// }
// f1()
// console.log(b)


// let a = 0;
// function f1(){
// let b = Math.round(Math.random(0, 100)*100)
// console.log(b)
// a+=b
// // console.log(a)
// if(a>300) return
// f1()
// }
// f1()
// // console.log(a)


// 1) Написати функцію, яка приймає 1 параметр. з тим, що передали перший раз і т. д.
// Все це із замиканнями, наприклад:
// sum(3) = 3
// sum(5) = 8
// sum(20) = 28

// function sum(){
//     let res = 0
//     return function(y){
//      return res+=y;
//     }
// }

// let a = sum()
// console.log(a(3));
// console.log(a(5));
// console.log(a(8));




// let people = [
//     {name: 'Vlad', age: 25, budget: 20000},
//     {name: 'Daria', age: 12, budget: 100},
//     {name: 'Alex', age: 55, budget: 25000},
//     {name: 'Pavel', age: 13, budget: 30000},
//     {name: 'Karolina', age: 35, budget: 7000}
// ]

// МЕТОД forEach()

// let s =  people.forEach(function(i){
//     console.log(i.name + ' ' + i.budget)
// })

// // пример стрелочной функции
// people.forEach(i => console.log(i))


// // Метод Map
//  const a = people.map(i =>{return i.name +' '+ i.age})
//  console.log(a);


// Метод Filter

// const a = people.filter(i =>{if(i.age>18){return true}})
// console.log(a);

// Метод Find

// let  a = people.find(i=>{return i.age === 55})
// console.log(a);


// Метод Reduce

// let a = people.reduce((z, i)=>{ return z+i.budget},0)
// console.log(a);


// Задача №1 . Алерт по нажатию на кнопку

// const f1 = function (){
//     alert = 'hhh'
// }
// const a = Array.from(document.querySelectorAll('button'))
// // a.addEventListener('click', f1)


// const isPalidrom = (str) => {
//     let strAPR = str.toUpperCase()
//     let reverse = str.split('').reverse().join('').toUpperCase()
//     if (reverse === strAPR) {
//         console.log(true)
//     } else {
//         console.log(false)
//     }

// }

// isPalidrom('довод')
// isPalidrom('машина')
// isPalidrom('Потоп')

// var str = 'Каждый охотник желает знать';
// function delete_characters(str, length) {
// return str.slice(0,length)
// };

// console.log(delete_characters(str, 7));


// var str = "HTML JavaScript PHP";
// let STR = str.toUpperCase().split(' ')
// let masf = []
// for(let i = 0;i<STR.length; i++){
//  masf.push(STR[i]+'-')
// }
// let a = masf.join('').split('')
// a.pop()
// let f = a.join('')
// // function insert_dash(str) {
// // let STR = str.split(' ')

// // }
// // insert_dash()
// console.log(f);

// var str = "HTML JavaScript PHP";
// let a = str.trim()
// console.log(a)